================================================================================
Block comment
================================================================================

/*
 * Testing block comment
*/
fn void test(int foo)
{
  return foo - 1;
}
--------------------------------------------------------------------------------

(source_file
  (block_comment
        (block_comment_text))
      (func_definition
        (func_header
          (type
            (base_type
              (base_type_name)))
          (ident))
        (fn_parameter_list
          (parameter
            (type
              (base_type
                (base_type_name)))
            (ident)))
        (macro_func_body
          (compound_stmt
            (return_stmt
              (binary_expr
                (ident)
                (integer_literal)))))))
================================================================================
Singleline Doc comment
================================================================================
<* Single doc text *>
fn int test(int foo)
{
  return foo - 1;
}
--------------------------------------------------------------------------------

(source_file
  (doc_comment
        (doc_comment_text))
      (func_definition
        (func_header
          (type
            (base_type
              (base_type_name)))
          (ident))
        (fn_parameter_list
          (parameter
            (type
              (base_type
                (base_type_name)))
            (ident)))
        (macro_func_body
          (compound_stmt
            (return_stmt
              (binary_expr
                (ident)
                (integer_literal)))))))
================================================================================
Multiline Doc comment
================================================================================
<*
Multiple line doc
Another line
*>
fn int test(int foo)
{
  return foo - 1;
}
--------------------------------------------------------------------------------

(source_file
  (doc_comment
        (doc_comment_text))
      (func_definition
        (func_header
          (type
            (base_type
              (base_type_name)))
          (ident))
        (fn_parameter_list
          (parameter
            (type
              (base_type
                (base_type_name)))
            (ident)))
        (macro_func_body
          (compound_stmt
            (return_stmt
              (binary_expr
                (ident)
                (integer_literal)))))))
================================================================================
Param Doc comment
================================================================================
<*
@param foo "text"
*>
fn int test(int a, int b)
{
  return foo - 1;
}
--------------------------------------------------------------------------------

(source_file
  (doc_comment
    (doc_comment_text)
    (doc_comment_contract
          (at_ident)
          (doc_comment_contract_text))
  )
  (func_definition
    (func_header
      (type
        (base_type
          (base_type_name)))
      (ident))
    (fn_parameter_list
      (parameter
        (type
          (base_type
            (base_type_name)))
                      (ident))
      (parameter
        (type
          (base_type
            (base_type_name)))
        (ident)))
    (macro_func_body
      (compound_stmt
        (return_stmt
          (binary_expr
            (ident)
            (integer_literal)))))))
================================================================================
Param Doc 2 comments
================================================================================
<*
@param foo "text"
@param [&in] bar `text`
*>
fn int test(int a, int b)
{
  return foo - 1;
}
--------------------------------------------------------------------------------

(source_file
  (doc_comment
    (doc_comment_text)
    (doc_comment_contract
          (at_ident)
          (doc_comment_contract_text))
    (doc_comment_contract
          (at_ident)
          (doc_comment_contract_text))
  )
  (func_definition
    (func_header
      (type
        (base_type
          (base_type_name)))
      (ident))
    (fn_parameter_list
      (parameter
        (type
          (base_type
            (base_type_name)))
                      (ident))
      (parameter
        (type
          (base_type
            (base_type_name)))
        (ident)))
    (macro_func_body
      (compound_stmt
        (return_stmt
          (binary_expr
            (ident)
            (integer_literal)))))))

================================================================================
Require Doc single line
================================================================================
<* @requre foo == 0 *>
fn int test(int a, int b)
{
  return foo - 1;
}
--------------------------------------------------------------------------------

(source_file
  (doc_comment
    (doc_comment_text)
    (doc_comment_contract
          (at_ident)
          (doc_comment_contract_text))
  )
  (func_definition
    (func_header
      (type
        (base_type
          (base_type_name)))
      (ident))
    (fn_parameter_list
      (parameter
        (type
          (base_type
            (base_type_name)))
                      (ident))
      (parameter
        (type
          (base_type
            (base_type_name)))
        (ident)))
    (macro_func_body
      (compound_stmt
        (return_stmt
          (binary_expr
            (ident)
            (integer_literal)))))))
